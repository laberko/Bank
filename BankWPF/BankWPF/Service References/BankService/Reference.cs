//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BankWPF.BankService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Transaction", Namespace="http://laberko.net")]
    [System.SerializableAttribute()]
    public partial class Transaction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Banknote100Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Banknote1000Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Banknote500Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Banknote5000Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsIncomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TimeStampField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Banknote100 {
            get {
                return this.Banknote100Field;
            }
            set {
                if ((this.Banknote100Field.Equals(value) != true)) {
                    this.Banknote100Field = value;
                    this.RaisePropertyChanged("Banknote100");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Banknote1000 {
            get {
                return this.Banknote1000Field;
            }
            set {
                if ((this.Banknote1000Field.Equals(value) != true)) {
                    this.Banknote1000Field = value;
                    this.RaisePropertyChanged("Banknote1000");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Banknote500 {
            get {
                return this.Banknote500Field;
            }
            set {
                if ((this.Banknote500Field.Equals(value) != true)) {
                    this.Banknote500Field = value;
                    this.RaisePropertyChanged("Banknote500");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Banknote5000 {
            get {
                return this.Banknote5000Field;
            }
            set {
                if ((this.Banknote5000Field.Equals(value) != true)) {
                    this.Banknote5000Field = value;
                    this.RaisePropertyChanged("Banknote5000");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsIncome {
            get {
                return this.IsIncomeField;
            }
            set {
                if ((this.IsIncomeField.Equals(value) != true)) {
                    this.IsIncomeField = value;
                    this.RaisePropertyChanged("IsIncome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ATM", Namespace="http://laberko.net")]
    [System.SerializableAttribute()]
    public partial class ATM : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Banknote100Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Banknote1000Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Banknote500Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Banknote5000Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountValue {
            get {
                return this.AccountValueField;
            }
            set {
                if ((this.AccountValueField.Equals(value) != true)) {
                    this.AccountValueField = value;
                    this.RaisePropertyChanged("AccountValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Banknote100 {
            get {
                return this.Banknote100Field;
            }
            set {
                if ((this.Banknote100Field.Equals(value) != true)) {
                    this.Banknote100Field = value;
                    this.RaisePropertyChanged("Banknote100");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Banknote1000 {
            get {
                return this.Banknote1000Field;
            }
            set {
                if ((this.Banknote1000Field.Equals(value) != true)) {
                    this.Banknote1000Field = value;
                    this.RaisePropertyChanged("Banknote1000");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Banknote500 {
            get {
                return this.Banknote500Field;
            }
            set {
                if ((this.Banknote500Field.Equals(value) != true)) {
                    this.Banknote500Field = value;
                    this.RaisePropertyChanged("Banknote500");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Banknote5000 {
            get {
                return this.Banknote5000Field;
            }
            set {
                if ((this.Banknote5000Field.Equals(value) != true)) {
                    this.Banknote5000Field = value;
                    this.RaisePropertyChanged("Banknote5000");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BankService.IWcfService")]
    public interface IWcfService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfService/GetTransactions", ReplyAction="http://tempuri.org/IWcfService/GetTransactionsResponse")]
        BankWPF.BankService.Transaction[] GetTransactions(int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfService/GetTransactions", ReplyAction="http://tempuri.org/IWcfService/GetTransactionsResponse")]
        System.Threading.Tasks.Task<BankWPF.BankService.Transaction[]> GetTransactionsAsync(int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfService/GetAtmState", ReplyAction="http://tempuri.org/IWcfService/GetAtmStateResponse")]
        BankWPF.BankService.ATM GetAtmState();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfService/GetAtmState", ReplyAction="http://tempuri.org/IWcfService/GetAtmStateResponse")]
        System.Threading.Tasks.Task<BankWPF.BankService.ATM> GetAtmStateAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfService/PutMoneyAsync", ReplyAction="http://tempuri.org/IWcfService/PutMoneyAsyncResponse")]
        void PutMoneyAsync(BankWPF.BankService.Transaction transaction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfService/PutMoneyAsync", ReplyAction="http://tempuri.org/IWcfService/PutMoneyAsyncResponse")]
        System.Threading.Tasks.Task PutMoneyAsyncAsync(BankWPF.BankService.Transaction transaction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfService/GetMoney", ReplyAction="http://tempuri.org/IWcfService/GetMoneyResponse")]
        BankWPF.BankService.Transaction GetMoney(int money, bool confirmed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfService/GetMoney", ReplyAction="http://tempuri.org/IWcfService/GetMoneyResponse")]
        System.Threading.Tasks.Task<BankWPF.BankService.Transaction> GetMoneyAsync(int money, bool confirmed);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWcfServiceChannel : BankWPF.BankService.IWcfService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WcfServiceClient : System.ServiceModel.ClientBase<BankWPF.BankService.IWcfService>, BankWPF.BankService.IWcfService {
        
        public WcfServiceClient() {
        }
        
        public WcfServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WcfServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WcfServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WcfServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public BankWPF.BankService.Transaction[] GetTransactions(int count) {
            return base.Channel.GetTransactions(count);
        }
        
        public System.Threading.Tasks.Task<BankWPF.BankService.Transaction[]> GetTransactionsAsync(int count) {
            return base.Channel.GetTransactionsAsync(count);
        }
        
        public BankWPF.BankService.ATM GetAtmState() {
            return base.Channel.GetAtmState();
        }
        
        public System.Threading.Tasks.Task<BankWPF.BankService.ATM> GetAtmStateAsync() {
            return base.Channel.GetAtmStateAsync();
        }
        
        public void PutMoneyAsync(BankWPF.BankService.Transaction transaction) {
            base.Channel.PutMoneyAsync(transaction);
        }
        
        public System.Threading.Tasks.Task PutMoneyAsyncAsync(BankWPF.BankService.Transaction transaction) {
            return base.Channel.PutMoneyAsyncAsync(transaction);
        }
        
        public BankWPF.BankService.Transaction GetMoney(int money, bool confirmed) {
            return base.Channel.GetMoney(money, confirmed);
        }
        
        public System.Threading.Tasks.Task<BankWPF.BankService.Transaction> GetMoneyAsync(int money, bool confirmed) {
            return base.Channel.GetMoneyAsync(money, confirmed);
        }
    }
}
